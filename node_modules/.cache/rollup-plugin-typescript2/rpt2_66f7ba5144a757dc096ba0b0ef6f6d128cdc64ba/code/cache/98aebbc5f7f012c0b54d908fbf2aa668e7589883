{"code":"\"use strict\";\nclass Token {\n    type;\n    value;\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n}\n// 1～4级标题\nclass HeaderStrategy {\n    regex = /^(#{1, 4})\\s+(.*)$/;\n    matches(line) {\n        return this.regex.test(line);\n    }\n    tokenize(line) {\n        const match = line.match(this.regex);\n        console.log(match);\n        return new Token(`header${match[1].length}`, match[2]);\n    }\n}\nclass Tokenizer {\n    strategies = [];\n    addStrategy(strategy) {\n        this.strategies.push(strategy);\n    }\n}\nconst tokenizer = new Tokenizer();\ntokenizer.addStrategy(new HeaderStrategy());\nconsole.log(tokenizer);\n//# sourceMappingURL=index.js.map","references":[],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/tokens/index.ts\"],\"names\":[],\"mappings\":\";AAAA,MAAM,KAAK;IACU;IAAqB;IAAxC,YAAmB,IAAY,EAAS,KAAa;QAAlC,SAAI,GAAJ,IAAI,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAQ;IAAG,CAAC;CAC1D;AAOD,SAAS;AACT,MAAM,cAAc;IACV,KAAK,GAAG,oBAAoB,CAAA;IAEpC,OAAO,CAAC,IAAY;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAC9B,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA;QACrC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QAElB,OAAO,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;IACxD,CAAC;CACF;AAED,MAAM,SAAS;IACL,UAAU,GAA2B,EAAE,CAAA;IAE/C,WAAW,CAAC,QAA8B;QACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IAChC,CAAC;CACF;AAED,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAA;AAEjC,SAAS,CAAC,WAAW,CAAC,IAAI,cAAc,EAAE,CAAC,CAAA;AAC3C,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA\"}","dts":{"name":"/Users/bytedance/Desktop/md-editor/node_modules/.cache/rollup-plugin-typescript2/placeholder/tokens/index.d.ts","writeByteOrderMark":false,"text":"declare class Token {\n    type: string;\n    value: string;\n    constructor(type: string, value: string);\n}\ninterface TokenizationStrategy {\n    matches(line: string): boolean;\n    tokenize(line: string): Token;\n}\ndeclare class HeaderStrategy implements TokenizationStrategy {\n    private regex;\n    matches(line: string): boolean;\n    tokenize(line: string): Token;\n}\ndeclare class Tokenizer {\n    private strategies;\n    addStrategy(strategy: TokenizationStrategy): void;\n}\ndeclare const tokenizer: Tokenizer;\n"}}
